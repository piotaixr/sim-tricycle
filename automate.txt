/*fichier automate*/
robot_porteur{

        etat=init{
            transition{
                sinon{
                    etat=normal;
                }
            }
        }
	etat=normal[tag1,tag2]{
            transition{
		si(boule_existe()){ cible<-bouleplusproche();
                                     etat=deplacement_norm;
                }
            }
            transition{
		si(piece_existe()){ cible<-pieceplusproche();
                                    etat=deplacement_norm;
                }
            }
            transition{
                si(non_vide(var: chemin)){etat=recherche;
                }
            }
            transition{
                si(case_obscure_existe()){ cible<-case_obscure_plus_proche();
                                    chemin<-trouvechemin(var:cible);
                                    etat=recherche;
                }
            }
            transition{
		sinon{sleep();
		       etat=normal;
		}
            }
        }

        etat=recherche[tag1]{
            transition{
                sinon { step(var:chemin);
                        etat=normal;
                }
            }
        }
	
	etat=deplacement_norm[tag1]{
            transition{
		si(contains(ref:self.case,var:cible)){ ramasser();
				     etat=porteur;
                }
            }
            transition{
		sinon{allerici(var : cible);
		      etat=normal;
		}
            }
	}
	etat=porteur[tag2]{
            transition{
		etat=deplacement_port;
            }
	}
	etat=deplacement_port[tag2]{
            transition{
		si(case==base){deposer();
				   etat=normal;
			     }
            }
            transition{
		sinon{allerici(ref :team.base);
		      etat=deplacement_port;
		}
            }
	}
        tag=tag1{
            avancer=1;
            reculer=1;
            tourner_droite=1;
            tourner_gauche=1;
        }
        tag=tag2{
            avancer=2;
            reculer=2;
            tourner_droite=1;
            tourner_gauche=1;
        }
}

robot_guerrier{
        etat=init{
            transition{
                sinon{
                    etat=normal;
                }
            }
        }
	etat=normal{
	    transition{
		si(ennemi_devant()){ ennemi<-robot_devant();
				     etat=strategie;
		}
            }
	    transition{
		si(contains(caseCourante,ptrechercher)){ sleep();
				                         etat=normal;
                }
            }
            transition{
		si(pt_control_trouve()){  ptrechercher<-PtDeControlIdeal();
                                          etat=deplacement_norm;
                }
            }
            transition{
		sinon{sleep();
		       etat=normal;
		}
            }
        }

        etat=strategie{
            transition{
                si(pv_necessaire()){ attaquer();
                                     etat=attaque;
                }
            }
            transition{
                sinon{ defendre();
                       etat=defense;
                }
            }
       }
           
	
	etat=deplacement_norm{
            transition{
		si(contains(caseCourante,ptrechercher)){ sleep();
				     etat=normal;
                }
            }
            transition{
		sinon{allerici(var : ptrechercher);
		      etat=normal;
		}
            }
	}

	etat=attaque{
            transition{
		si(!ennemi_devant()){etat=normal;
		}
	    }
	    transition{
		si(!pv_necessaire()){defendre();
                                     etat=defense;
		}
            }
	    transition{
		sinon{attaquer();
		      etat=attaque;
		}
	    }
       }

	etat=defense{
            transition{
		si(!ennemi_devant){etat=normal;
		}
            }
            transition{
		sinon{defendre();
		      etat=defense;
		}
            }
	}
        
}

robot_constructeur{

        etat=init{
            transition{
                sinon{
                    etat=cherchercase;
                }
            }
        }

	etat=cherchercase{		
            transition{
		sinon{cible<-casealea();
		      etat=deplacement;
		}
            }
        }

        etat=deplacement{
            transition{
		si(contains(caseCourante,cible)){ allerici(var : cible);
						   etat=deplacement;
                }
            }	
	    transition{
		si(case_devant_vide()){ construiction(string: tour);
					etat=construire;
		}
	    }
	    transition{
		sinon{etat=cherchercase;
		}
	    }
        }
	
	etat=construction{           
            transition{
		sinon{etat=cherchercase;
		}
            }
	}
	
}

robot_destructeur{

        etat=init{
            transition{
                sinon{
                    etat=chercherbat;
                }
            }
        }

	etat=chercherbat{		
            transition{
		si(bat_trouve()){cible<-batpluspres();
		                 etat=deplacement;
		}
            }
	    transition{
		sinon{sleep();
		      etat=chercherbat;
		}
            }
        }

        etat=deplacement{
            transition{
		si(!contains(caseCourante,cible)){ allerici(var : cible);
						   etat=deplacement;
                }
            }	
	    transition{
		si(case_devant_bat()){ destructiontotale();
					etat=destruire;
		}
	    }
	    transition{
		sinon{etat=chercherbat;
		}
	    }
        }
	
	etat=destruction{           
            transition{
		sinon{etat=cherchercase;
		}
            }
	}
	
}


fin
